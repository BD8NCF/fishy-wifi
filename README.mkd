Scripts, notes and the odd fish for the ESP8266
===

## TODO

- finish adding web server to init.lua
- document the firmware rebuiling
- try fixed IP address
- verify sleep and deepsleep modes and current consumption
- what about smartwifi as a joining protocol? does it still not work?

## How to...

Build open source toolchain:

- instructions from
  http://nathan.chantrell.net/20141230/wifi-mqtt-display-with-the-esp8266/
- sudo apt-get install make unrar autoconf automake libtool gcc g++ gperf flex
  bison texinfo gawk ncurses-dev libexpat-dev python sed
- mkdir ${HOME}/esp8266-stuff; cd there
- download 2nd esptool flasher util --
  http://www.esp8266.com/download/file.php?id=86 -- from here
  http://www.esp8266.com/viewtopic.php?f=9&t=304 (redundant now?)
- git clone https://github.com/pfalcon/esp-open-sdk
- cd esp-open-sdk
- make STANDALONE=n
  - Xtensa toolchain is built, to use it:
  - export PATH=/home/hamish/esp-open-sdk/xtensa-lx106-elf/bin:$PATH
  - Espressif ESP8266 SDK is installed. Toolchain contains only Open Source
    components To link external proprietary libraries add:
  - xtensa-lx106-elf-gcc -I/home/hamish/esp-open-sdk/sdk/include
    -L/home/hamish/esp-open-sdk/sdk/lib


Rebuild NodeMCU:

    PATH=${PATH}:${HOME}/esp8266-stuff/esp-open-sdk/xtensa-lx106-elf/bin make
    ?
    cd app
    PATH=${PATH}:${HOME}/esp8266-stuff/esp-open-sdk/xtensa-lx106-elf/bin ./gen_misc[_plus].sh 
missing genflashbinv6...

try: git clone git@github.com:tommie/esptool-ck.git
and method given at https://github.com/esp8266/esp8266-wiki/wiki/Building

    cd .output/eagle/debug/image
    ${HOME}/esp8266-stuff/esptool/esptool -eo eagle.app.v6.out -bo eagle.app.v6.flash.bin -bs .text -bs .data -bs .rodata -bc -ec
    PATH=${PATH}:${HOME}/esp8266-stuff/esp-open-sdk/xtensa-lx106-elf/bin \
      xtensa-lx106-elf-objcopy --only-section .irom0.text -O binary eagle.app.v6.out eagle.app.v6.irom0text.bin
    cp eagle.app.v6.flash.bin ../../../../../bin/
    cp eagle.app.v6.irom0text.bin ../../../../../bin/


Configure ESPlorer: 

- turn off turbo mode or hit the writing 0 byte files problem

Rebuild ESPlorer:

    ant -Dplatforms.JDK1.7.home=/usr/lib/jvm/jdk-8-oracle-arm-vfp-hflt/ jar

Connect via picocom:

    (first disable getty on /dev/ttyAMA0 via /etc/inittab)
    picocom /dev/ttyAMA0 --omap crcrlf
    (then toggle DTR to get elua prompt)

Picocom commands:

    ^A plus...
    ^T toggle DTR line
    ^U baud rate up (^D for down)

Flash nodemcu:

    sudo ./esptool.py --port /dev/ttyAMA0 write_flash 0x00000 ../nodemcu_512k_latest.bin

Luatool filetransfer thingy:

    git clone https://github.com/4refr0nt/luatool.git
    ../luatool/luatool/luatool.py -p /dev/ttyAMA0 -f init.lua -t init.lua -v

## Resources

- ESP8266 BB: http://www.esp8266.com/
- NodeMCU: http://nodemcu.com/index_en.html
- File API:
  https://raw.githubusercontent.com/nodemcu/nodemcu-firmware/master/app/modules/file.c
- Why not worth bothering with ad hoc Javascript PK encryption (do HTTPS
  instead): http://matasano.com/articles/javascript-cryptography/
- Chip datasheet:
  https://nurdspace.nl/images/e/e0/ESP8266_Specifications_English.pdf
- Nurdspace notes: https://nurdspace.nl/ESP8266
- Espressif BB: http://bbs.espressif.com/
